将一组数组中的0元素全部找出来，然后置于数组的尾部。 
S1：
采用双指针法，last指针指向不为0的元素。两次遍历数组，第一次将不是0的元素放到last中，然后剩余的直接填充0即可。
 public void moveZeroes(int[] nums) {
        int lastNonZeroFoundAt = 0;
        
        for(int i = 0;i < nums.length;i++){
            if (nums[i]!=0){
                nums[lastNonZeroFoundAt++] = nums[i];
            }
        }
        
        for (int j = lastNonZeroFoundAt; j < nums.length;j++){
            nums[j] = 0;
        }
        
    }
    
S2：
如果数组里面0比较多，可以采取直接交换的方式。
    public void moveZeroes(int[] nums) {
      for (int lastNonZeroFoundAt = 0,  cur = 0; cur < nums.length; cur++){
          if (nums[cur] != 0 )
              swap(nums[lastNonZeroFoundAt++], nums[cur]);
          }
      }  
